// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// Home row mods macro
/* #define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4 */
/* #define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4 */

/ {
    /* behaviors { */
    /*     ht: hold_tap { */
    /*         compatible = "zmk,behavior-hold-tap"; */
    /*         #binding-cells = <2>; */
    /*         flavor = "tap-preferred"; */
    /*         tapping-term-ms = <220>; */
    /*         quick-tap-ms = <150>; */
    /*         require-prior-idle-ms = <100>; */
    /*         bindings = <&kp>, <&kp>; */
    /*     }; */
    /* }; */
    /* conditional_layers { */
    /*     compatible = "zmk,conditional-layers"; */
    /*     tri_layer { */
    /*         if-layers = <1 2>; */
    /*         then-layer = <3>; */
    /*     }; */
    /* }; */

    combos {
        compatible = "zmk,combos";

        left_boot {
            bindings = <&bootloader>;
            key-positions = <10 12 11 13>;
        };

        right_boot {
            bindings = <&bootloader>;
            key-positions = <16 17 18 19>;
        };

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <16 17>;
        };

        CapsLock {
            bindings = <&kp CAPS>;
            key-positions = <12 13>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W           &kp E        &kp R             &kp T              &kp Y        &kp U              &kp I                &kp O              &kp P
&mt LEFT_WIN A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_SHIFT F  &kp G              &kp H        &mt RIGHT_SHIFT J  &mt RIGHT_CONTROL K  &mt LEFT_ALT L     &mt RIGHT_WIN SEMICOLON
&kp Z           &kp X           &kp C        &kp V             &kp B              &kp N        &kp M              &kp COMMA            &mt RIGHT_ALT DOT  &kp FSLH
                                             &lt 4 ENTER       &lt 3 BACKSPACE    &lt 1 SPACE  &lt 2 TAB
            >;
        };

        layer_1 {
            bindings = <
&kp EQUAL  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0      &kp HOME   &kp PAGE_DOWN         &kp PAGE_UP        &kp END                   &kp INS
&kp MINUS  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp APOSTROPHE    &kp LEFT   &mt RIGHT_SHIFT DOWN  &mt RCTRL UP       &mt LEFT_ALT RIGHT        &mt RIGHT_WIN DELETE
&kp GRAVE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH     &kp COLON  &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &mt RIGHT_ALT LEFT_BRACE  &kp RIGHT_BRACE
                                       &trans        &trans            &none      &trans
            >;
        };

        layer_2 {
            bindings = <
&kp PRINTSCREEN  &kp F7  &kp F8  &kp F9    &kp F10    &trans  &trans           &trans     &trans         &trans
&kp SCROLLLOCK   &kp F4  &kp F5  &kp F6    &kp F11    &trans  &kp RIGHT_SHIFT  &kp RCTRL  &kp LEFT_ALT   &kp RIGHT_WIN
&kp PAUSE_BREAK  &kp F1  &kp F2  &kp F3    &kp F12    &trans  &trans           &trans     &kp RIGHT_ALT  &trans
                                 &kp CAPS  &kp ESC    &trans  &none
            >;
        };

        layer_3 {
            bindings = <
&kp C_BRI_UP   &trans        &kp C_FF          &kp C_NEXT               &kp C_VOL_UP    &kp HOME    &kp PAGE_DOWN  &kp PAGE_UP  &kp END      &kp INS
&kp LEFT_WIN   &kp LEFT_ALT  &mt RCTRL C_STOP  &mt LSHIFT C_PLAY_PAUSE  &kp C_MUTE      &kp LEFT    &kp DOWN       &kp UP       &kp RIGHT    &kp DELETE
&kp C_BRI_DEC  &trans        &kp C_RW          &kp C_PREV               &kp C_VOL_DN    &kp K_UNDO  &kp K_CUT      &kp K_COPY   &kp K_PASTE  &kp C_AC_SEARCH
                                               &trans                   &none           &trans      &trans
            >;
        };

        layer_4 {
            bindings = <
&trans        &trans        &trans     &bt BT_NXT      &bt BT_CLR_ALL    &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &kp C_MENU
&kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &bt BT_CLR        &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &mkp MCLK
&trans        &trans        &trans     &bt BT_PRV      &trans            &trans          &trans          &trans        &trans           &trans
                                       &none           &trans            &mkp LCLK       &mkp RCLK
            >;
        };
    };
};
